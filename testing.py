'''
    PART 4: Testing
    This file is used to test the prodcons.c file.
    It compiles the prodcons.c file and runs it with different testcases.
    The output of the testcases are stored in test.txt temporary file.
    The output is then checked by comparing the output buffer size to 0.
    The testcases are generated by taking all combinations (including repeats) of the values in list below:
    At the end the temporary files are deleted.
    Output for the current version (11/19/2023) prints:
        "All 216 testcases passed"
    You can add or remove values from the list below to test more or less testcases.
'''
testcaseNums = [5, 10, 100, 300, 500, 1000]

import sys
import subprocess

# Redirect stdout and stderr to the file
with open('test.txt', 'w') as output_file:
    # Compile the prodcons.c file
    subprocess.run(
        ["gcc", "-o", "tempTest", "prodcons.c", "-lpthread"],
        stdout=output_file,
        stderr=subprocess.PIPE,
        text=True
    )
    # Testcases
    testcases = []
    for num1 in testcaseNums:
        for num2 in testcaseNums:
            for num3 in testcaseNums:
                testcases.append(f"{num1} {num2} {num3}")

    # Run the compiled file
    for testcase in testcases:
        prodCons,items,bufSize = testcase.split()
        subprocess.run(["./tempTest", prodCons,items,bufSize], stdout=output_file, stderr=subprocess.PIPE, text=True)

#check the output
outputs=[]
with open('test.txt', 'r') as file:
    lines = file.readlines()
    outputs = [int(l.strip()) for l in lines[1::2]]
    # for index, output in enumerate(outputs):
    #     print(f"Testcase {testcases[index]} \toutput: {output}")

failed=False
for index,output in enumerate(outputs):
    if output != 0:
        print("Test Failed",testcases[index])
        failed=True
if not failed:
    print(f"All {len(testcases)} testcases passed")

subprocess.run(["rm", "tempTest"])
subprocess.run(["rm", "test.txt"])

